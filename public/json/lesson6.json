{
    "section1": {
        "1": {
            "sectionname": "Semantics for QL",
            "sectionNum": "1",
            "title": "Creating models in Quantified Logic",
            "content": {
                "a": {
                    "type": "p",
                    "substance": ["In module 2 we developed the truth table system, a semantic method for evaluating sentences and arguments in SL. The method was called semantic, because it involved establishing meanings for all the non-logical parts of a sentence, in this case, the sentence letters. These were called non-logical because their meaning was not fixed by the rules of SL. The logical part of the language was the system of connectives and parentheses. As it turned out, the logical parts of our language were truth functional: the meaning of the larger sentences built up with the connectives and parentheses was simply a function of the truth of the smaller parts. Because the system of sentential connectives and parentheses is truth functional, our semantic system only needed to look at one aspect of the meaning of the sentence letters, their truth value. Thus an interpretation of a sentence in SL simply turned out to be a truth assignment on the sentence letters. That's why you spent module 2 merrily writing Ts and Fs under sentence letters. Each little row of Ts and Fs represented one way of assigning meaning to a sentence or argument, and all the little rows in the truth table represented all the possible ways of assigning meaning to the sentence or argument (at least as far as truth was concerned.)",
                        "In this chapter we are going to develop similar methods for QL. Because QL is a more complicated system than SL developing semantics for QL will be much more complicated, and there will be greater limitations for what we can do with these methods."

                    ]
                }
            }
        },
        "2": {
            "title": "Reading Ex. 1: Interpretation w/ Cards",
            "content": {
                "a": {
                    "type": "link",
                    "url": "../6/wason3",
                    "title": "Interpretation w/ Cards",
                    "description": "To get an intuitive taste of QL semantics, the first reading quiz will ask you to determine the truth value of a given QL proposition, based on the cards presented to you."
                }
            }
        },
        "3": {
            "title": "Basic Models",
            "content": {
                "a": {
                    "type": "p",
                    "substance": ["The first thing we need to do is to find an equivalent in QL of a little row of Ts and Fs beneath a sentence in SL. We called this little row of Ts and Fs an interpretation, because it gave one aspect of the meaning of the parts of the sentence, namely their truth values. To come up with an interpretation of a sentence in QL, we will need to look at more than the truth or falsity of sentences, though. We have, after all, broken open the atomic sentence to look at its subatomic parts, and now we will need to assign meaning to these parts. The way to start is to look at the symbolization keys we created when we were translating sentences in and out of QL. The symbolization key contained a universe of discourse (UD), a meaning for each predicate, and an object picked out by each term. For example:"]
                },
                "b": {
                    "type": "p",
                    "substance": ["$$\\text{UD: comic book characters}$$",
                        "$$Fx: \\text{x fights crime}$$",
                        "$$b: \\text{Batman}$$",
                        "$$w: \\text{Bruce Wayne}$$"
                    ]
                },
                "c": {
                    "type": "p",
                    "substance": ["Given this symbolization key, we can translate sentences like this"]
                },
                "d": {
                    "type": "list",
                    "substance": ["\\(Fb\\): Batman fights crime", "\\(Fw\\): Bruce Wayne fights crime.", "\\(Fb \\to Fw\\): If Batman fights crime, then Bruce Wayne fights crime."]
                },
                "e": {
                    "type": "p",
                    "substance": ["This symbolization key, along with some basic knowledge of superhero stories, gives us enough information to figure out that the sentence Fb is true. (Notice that the sentence Fb is not true just because of the interpretation. The way we interpret the sentence, plus the way the world is, makes the sentence true.)",

                        "This is the information we need to develop an interpretation of sentences in QL. We are not just assigning truth values anymore. We need to get deeper into meaning here, and look at the reference of the parts of the sentence. Reference is an aspect of meaning that deals with the way bits of language pick out or identify objects in the real world. For our purposes the real world is the universe of discourse, the set of objects we are talking about. To explain how a singular term like b refers, we need only point out the member of the UD it refers to, in this case, Batman. In more technical terms, Batman is the referent of B. For our purposes it is enough to define a referent like this: the referent of a term in QL is the unique object picked out by that term. ",

                        "(Notice that here to explain what b refers to, I have been forced to simply use another singular term in another language, the name ``Batman.'' To really pick out the object referred to, I would need to draw your attention to something in the actual world, for instance by holding up a comic book and pointing at the character on the cover.)", "We want to use similar methods to talk about the meaning of predicates. To do this we will talk about the extension of a predicate. The extension of a predicate is the set of objects in the UD that the predicate applies to. So if b is in the extension of the predicate F then the sentence Fb is true.",

                        "(Identifying the extension of a predicate like F again forces us to rely on another language, English. We can say that the extension of F includes Batman, Superman, Green Lantern, etc. The situation is worse because F has an indefinitely large extension, so we have relied on the English predicate 'fights crime' to describe it.)",

                        "All this means that we are able to talk about the meaning of sentences in QL entirely in terms of sets. We use curly brackets { and } to denote sets. The members of the set can be listed in any order, separated by commas. The fact that sets can be in any order is important, because it means that {foo, bar} and {bar, foo} are the same set. It is possible to have a set with no members in it. This is called the define{empty set}. The empty set is sometimes written as {}, but usually it is written as the single symbol \\(\\emptyset\\).",

                        "We are now able to give the equivalent of a line in a truth table for QL. An interpretation in QL will be called a model. A model of sentences or arguments in QL consists of a set that is the universe of discourse, individual members of that set that are the referents of the singular terms in the sentences or arguments, and subsets of the universe of discourse which are the extensions of the predicates used in the sentences or arguments. To see how this works imagine I have a bunch of sentences in QL, which include the predicate H and the singular term d. Now consider this symbolization key:"
                    ]
                },
                "l": {
                    "type": "list",
                    "substance": ["UD: Peopel who played as part of the Three Stooges", "Hx: x had head hair", "Mister Fine"]
                },
                "m": {
                    "type": "p",
                    "substance": ["What is the model that corresponds to this interpretation? There were six people who played as part of the Three Stooges over the years, so the UD will have six members: Larry Fine, Moe Howard, Curly Howard, Shemp Howard, Joe Besser, and Curly Joe DeRita. Curly, Joe, and Curly Joe were the only completely bald stooges. The result is this model:"]
                },
                "n": {
                    "type": "p",
                    "substance": [
                        "$$UD = \\{Larry, Curry, Moe, Shemp, Joe, Curly Joe\\}$$",
                        "$$H = \\{Larry, Moe, Shemp\\}$$",
                        "$$f = Larry$$"
                    ]
                },
                "o": {
                    "type": "p",
                    "substance": ["You do not need to know anything about the Three Stooges in order to evaluate whether sentences are true or false in this model. Hf is true, since the referent of f (Larry) is in the extension of H. Both \\(\\exists x Hx\\) and \\(\\exists x \\neg Hx\\) are true, since there is at least one member of the UD that is in the extension of H and at least one member that is not in the extension of H. In this way, the model captures all of the formal significance of the interpretation."]
                }
            }


        },

        "4": {
            "title": "Models for multiplace predicates",
            "content": {
                "a": {
                    "type": "p",
                    "substance": ["Now consider this interpretation:"]
                },
                "b": {
                    "type": "list",
                    "substance": ["UD: whole numbers less than 10", "Ex: x is even.", "Nx: x is negative.", "Lxy: x is less than y.", "Txyz: x times y equals z "]
                },
                "c": {
                    "type": "p",
                    "substance": ["The extension of a one-place predicate like E or B is just the subset of the UD of which the predicate is true. The extension of E is the subset {2,4,6,8}. There are many even numbers besides these four, but these are the only members of the UD that are even. There are no negative numbers in the UD, so \\(N\\) has an empty extension; i.e. extension{N}=\\(\\emptyset\\).",

                        "The extension of a two-place predicate like L is somewhat vexing. It seems as if the extension of L ought to contain 1, since 1 is less than all the other numbers; it ought to contain 2, since 2 is less than all of the other numbers besides 1; and so on. Every member of the UD besides 9 is less than some member of the UD. What would happen if we just wrote extension{L}={1,2,3,4,5,6,7,8}?",

                        "The problem is that sets can be written in any order, so this would be the same as writing extension{L}={8,7,6,5,4,3,2,1}. This does not tell us which of the members of the set are less than which other members.",

                        "We need some way of showing that 1 is less than 8 but that 8 is not less than 1. The solution is to have the extension of L consist of pairs of numbers. An ordered pair is like a set with two members, except that the order does matter. We write ordered pairs with angle brackets < and >. The ordered pair <foo, bar is different than the ordered pair <bar, foo>. The extension of L is a collection of ordered pairs, all of the pairs of numbers in the UD such that the first number is less than the second. Writing this out completely:"
                    ]
                },
                "g": {
                    "type": "list",
                    "substance": ["{<1,2>,<1,3>....<2,3>,<2,4>,....<3,4>, <3,5>,...<8,9>}"]
                },
                "h": {
                    "type": "p",
                    "substance": ["Three-place predicates will work similarly; the extension of a three-place predicate is a set of ordered triples where the predicate is true of those three thing in that order. So the extension of T in this model will contain ordered triples like <2,4,8>, because \\(2\\times 4 = 8\\).",
                        "Generally, the extension of an n-place predicate is a set of all ordered n-tuples \\(\\{<a_1, a_2,\\ldots, a_n>\\}\\) such that \\(a_1..a_n\\) are members of the UD and the predicate is true of \\(a_1..a_n\\)in that order."
                    ]
                }
            }
        },

        "5": {

            "title": "Reading Ex. 2: Interpretation using a Model",
            "content": {
                "a": {
                    "type": "p",
                    "substance": ["Determine whether each sentence is true or false in the model given. Check all sentences that are true."]
                },
                "b": {
                    "type": "p",
                    "substance": [
                        "$$UD, \\{Bart, Carl\\}$$",
                        "$$A: \\{Bart, Carl\\}$$",
                        "$$B: \\{Bart\\}$$",
                        "$$N: \\{\\}$$",
                        "$$R: \\{<Bart, Carl>\\}$$",
                        "$$c: Carl$$",
                        "$$b: Bart$$"
                    ]
                },
                "c": {
                    "type": "ex",
                    "id": "reading_2"
                }
            }

        }
    },
    "section2": {
        "1": {
            "sectionname": "Proofs with Models",
            "sectionNum": "2",
            "title": "Working with Models",
            "content": {
                "a": {
                    "type": "p",
                    "substance": ["Working with models is in some ways like working with truth tables and in some ways not. With truth tables, we could conclusively show that a sentence was a tautology or a contradiction, because the truth table would always have a finite number of lines. We cannot, however, use models to show that a sentence is a tautology or a contradiction, because there are infinitely many ways to model a sentence, and and no single way to talk about all of them, the way we talked about all the lines in a truth table. One thing we can do is show conclusively that a sentence is neither a tautology nor a contradiction, and is instead contingent. A contingent sentence will have at least one model where it is false and one model where it is true.", "As we shall see, this pattern plays itself out with the other logical properties we have covered. Because there are infinitely many ways to model a sentence, we cannot construct models to prove two sentences equivalent, but we can use them to show that two sentences are not equivalent. We cannot use models to show that a set of sentences is inconsistent, but we can use models to show that a set of sentences is consistent. Finally, we cannot construct a finite number of models to show that an argument is valid, but we can use one to show that an argument is invalid.",

                        "We will use the double turnstile symbol for QL much as we did for SL. \\(\\mathcal{A} \\vDash \\mathcal{B}\\)' means that an argument from \\(\\mathcal{A}\\) to \\(\\mathcal{B}\\) is semantically valid.  \\(\\vDash \\mathcal{A}\\) means that \\(\\mathcal{A}\\) is a semantic tautology. \\(\\mathcal{A} \\equiv \\mathcal{B}\\) means \\(\\mathcal{A} \\) and \\(\\mathcal{B} \\) are semantically equivalent. ",

                        "In our discussion of SL semantics, we stipulated semantic definitions for various logical concepts in SL that matched our truth table method for determining these concepts. So a sentence was said to be a tautology in SL if the column under its main connective contained only Ts. This was an alternative to saying the the truth table method was an imprecise way of getting at the ordinary language versions of these concepts. We will do something similar for the semantic definitions of logical notions in QL. "
                    ]
                },
                "b": {
                    "type": "list",
                    "substance": [
                        "A semantic tautology in QL is a sentence \\(\\mathcal{A}\\) that is true in every model; i.e.,  \\(\\vDash \\mathcal{A}\\).",

                        "A semantic contradiction in QL is a sentence \\mathcal{A} that is false in every model; i.e., \\(\\vDash \\neg \\mathcal{A}\\).",

                        "A sentence is semantically contingent in QL if and only if it is neither a tautology nor a contradiction.",

                        "Two sentences \\(\\mathcal{A}\\) and \\(\\mathcal{B}\\) are semantically equivalent in QL} if and only if they have the same truth value in every model.",

                        "The set \\({\\mathcal{A}_1,\\mathcal{A}_2,\\mathcal{A}_3,...}\\) is semantically consistent in QL if and only if there is at least one model in which all of the sentences are true. The set is semantically inconsistent in QL if and if only there is no such model.",

                        "An argument `` \\(\\mathcal{P}_1, \\mathcal{P}_2, ...\\), \\therefore \\mathcal{C} '' is semantically valid in QL} if and only if there is no model in which all of the premises are true and the conclusion is false; i.e., \\({\\mathcal{P}_1,\\mathcal{P}_2,...}\\vDash\\mathcal{C}\\). It is semantically invalid in QL} otherwise."
                    ]
                }

            }


        },
        "2": {
            "title": "Models to show contingency",
            "content": {
                "a": {
                    "type": "p",
                    "substance": [
                        "Suppose we want to show that \\(\\forall xAxx \\to Bd\\) is not a tautology. This requires showing that the sentence is not true in every model; i.e., that it is false in some model. If we can provide just one model in which the sentence false, then we will have shown that the sentence is not a tautology.",

                        "What would such a model look like? In order for \\(\\forall xAxx \\to \\neg Bd\\) to be false, the antecedent \\(\\forall x Axx\\) must be true, and the consequent \\(Bd\\) must be false.",

                        "To construct such a model, we start with a UD. It will be easier to specify extensions for predicates if we have a small UD, so start with a UD that has just one member. Formally, this single member might be anything, so let's just call it \\(\\alpha.\\) ",

                        "We want \\(\\forall x Axx\\) to be true, so we want all members of the UD to be paired with themselves in the extension of \\(A\\); this means that the extension of \\(A\\) must be {\\(<\\alpha,\\alpha>\\)}.",

                        "We want \\(Bd\\) to be false, so the referent of \\(d\\) must not be in the extension of \\(B\\). We give \\(B\\) an empty extension.",

                        "Since \\(\\alpha\\) is the only member of the UD, it must be the referent of \\(d\\). The model we have constructed looks like this:"


                    ]
                },
                "b": {
                    "type": "p",
                    "substance": [
                        "$$UD=\\{\\alpha\\}$$",
                        "$$A=\\{<\\alpha, \\alpha>\\}$$",
                        "$$B=\\emptyset$$",
                        "$$d=\\alpha$$"
                    ]
                },
                "c": {
                    "type": "p",
                    "substance": [
                        "Strictly speaking, a model specifies an extension for every predicate of QL and a referent for every constant. As such, it is generally impossible to write down a complete model. That would require writing down infinitely many extensions and infinitely many referents. However, we do not need to consider every predicate in order to show that there are models in which \\(\\forall xAxx \\to Bd\\) is false. Predicates like \\(H\\) and constants like \\(f_{13}\\) make no difference to the truth or falsity of this sentence. It is enough to specify extensions for \\(A\\) and \\(B\\) and a referent for \\(d\\), as we have done. This provides a partial model in which the sentence is false.",
                        "Perhaps you are wondering: What is \\(\\alpha\\)? What does the predicate \\(A\\) mean in English? The partial model could correspond to an interpretation like this one:"
                    ]
                },
                "d": {
                    "type": "list",
                    "substance": [
                        "UD: Paris", "Axy: x is in the same country as y", "d: the City of Light"
                    ]
                },
                "e": {
                    "type": "p",
                    "substance": [
                        "However, we don't have to say that this model corresponds to any particular interpretation of the sentence in English in order to know that the sentence \\(\\forall xAxx \\to Bd\\)  is not a tautology. We could have made our one-object universe of discourse contain only Mahatma Gandhi, or a pebble on a beach in Africa, or the number 2. As long as the predicate and terms were given the right reference, the sentence would come out false. Thus in the future we can evalaute sentences and arguments using UDs with arbitrarily named elements, like \\(\\alpha\\), \\(\\beta\\), \\(\\gamma\\), etc. ",

                        "We use the same method to show that \\(\\forall xAxx \\to Bd\\) is not a contradiction. We need only specify a model in which \\(\\forall xAxx \\to Bd\\) is true; i.e., a model in which either \\(\\forall x Axx\\) is false or \\(Bd\\) is true. Here is one such partial model:"

                    ]
                },
                "g": {
                    "type": "p",
                    "substance": [
                        "$$UD={\\alpha}$$",
                        "$$A={<\\alpha, \\alpha>}$$",
                        "$$B={\\alpha}$$",
                        "$$d=\\alpha$$"

                    ]
                },
                "h": {
                    "type": "p",
                    "substance": [
                        "We have now shown that \\(\\forall xAxx \\to Bd\\) is neither a tautology nor a contradiction. By the definition of ``contingent in QL,'' this means that \\(\\forall xAxx \\to Bd\\) is contingent. In general, showing that a sentence is contingent will require two models: one in which the sentence is true and another in which the sentence is false.",
                        "Notice, however, that we cannot show that a sentence actually is a tautology or a contradiction using one or two models this way. For a sentence to be a tautology, it must be true in every possible model. Similarly, if a sentence is a contradiction, it is false in all possible models. But there are infinitely many possible models for any sentence, and we don't have any tools in this text that will let us reason about all of them at once. "
                    ]

                }
            }
        },

        "3": {
            "title": "Models to show non-equivalence",
            "content": {
                "a": {
                    "type": "p",
                    "substance": ["Suppose we want to show that \\(\\forall x Sx\\) and \\(\\exists x Sx\\) are not logically equivalent. We need to construct a model in which the two sentences have different truth values; we want one of them to be true and the other to be false. We start by specifying a UD. Again, we make the UD small so that we can specify extensions easily. We will need at least two members. Let the UD be {\\(\\alpha\\), \\(\\beta\\)}. (If we chose a UD with only one member, the two sentences would end up with the same truth value. In order to see why, try constructing some partial models with one-member UDs.)",

                        "We can make \\(\\exists x Sx\\) true by including something in the extension of \\(S\\), and we can make \\(\\forall x Sx\\) false by leaving something out of the extension of \\(S\\). It does not matter which one we include and which one we leave out. Making \\(\\alpha\\) the only \\(S\\), we get a partial model that looks like this:"
                    ]
                },
                "b": {
                    "type": "p",
                    "substance": [
                        "$$UD=\\{\\alpha,\\beta\\}$$",
                        "$$S=\\alpha$$"
                    ]
                },
                "c": {
                    "type": "p",
                    "substance": [
                        "Notice, though, that we cannot show that two sentences are logically equivalent by simply producing a model. If we claim that two sentences are logically equivalent, we are once again making a claim about every possible model. "
                    ]
                }
            }

        },
        "4": {
            "title": "Models to show consistency",
            "content": {
                "a": {
                    "type": "p",
                    "substance": ["Suppose I wanted to show that the set of sentences \\(\\{\\exists x Fx, \\exists x \\neg Fx, \\forall x Gx\\}\\) is consistent. For this to be the case, we need at least one model where all three sentences are true. In this case that means having one object in our UD that is \\(F\\) and one that is not \\(F\\), and we need both of them to be \\(G\\). This would do the trick."]
                },
                "b": {
                    "type": "p",
                    "substance": [
                        "$$Ud=\\{\\alpha, \\beta\\}$$",
                        "$$F=\\{\\alpha\\}$$",
                        "$$G=\\{\\alpha, \\beta\\}$$"
                    ]
                },
                "c": {
                    "type": "p",
                    "substance": ["We cannot show a set of sentences to be inconsistent this way, because as before, that would mean creating an infinite number of models. "]
                }
            }
        },
        "5": {
            "title": "Model to show invalidity",
            "content": {
                "a": {
                    "type": "p",
                    "substance": ["Consider this invalid argument below:"]
                },
                "b": {
                    "type": "list",
                    "substance": ["\\( (Rc \\wedge K_1 c)\\wedge Tc\\)", "\\( \\therefore Tc \\wedge K_2 c\\)"]
                },
                "c": {
                    "type": "p",
                    "substance": ["In order to show that it is invalid, we need to show that there is some model in which the premises are true and the conclusion is false. We can construct such a model deliberately. Here is one way to do it:"]
                },
                "d": {
                    "type": "p",
                    "substance": [
                        "$$UD = \\{\\alpha\\}$$",
                        "$$T = \\{\\alpha\\}$$",
                        "$$K_1 = \\{\\alpha\\}$$",
                        "$$K_2 = \\{ \\}$$",
                        "$$R = \\{\\alpha\\}$$",
                        "$$c =\\alpha$$"
                    ]
                },
                "e": {
                    "type": "p",
                    "substance": ["Can we show an argument to be valid using models?"]
                }
            }
        },
        "6": {

            "title": "Reading Ex. 3: Using Models to Show Logical Properties",
            "content": {
                "a": {
                    "type": "p",
                    "substance": ["Select the QL statements where the given logical property holds."]
                },
                "b": {
                    "type": "ex",
                    "id": "reading_3"
                }
            }

        }
    },
    "ex": {
        "reading_1": {
            "section": "1",
            "title": "Reading Ex. 1: Interpretation w/ Cards"
        },
        "reading_2": {
            "section": "1",
            "title": "Reading Ex. 2: Interpretation using a Model",
            "type": "check",
            "id": "reading_2",
            "questions": [
                ["\\(Bc\\)", false],
                ["\\(Ac \\leftrightarrow \\neg Nc\\)", true],
                ["\\(Nc \\to (Ac \\vee Bc)\\)", true],
                ["\\(\\forall x Ax\\)", true],
                ["\\(\\forall x \\neg Bx\\)", false],
                ["\\(\\exists x (Ax \\wedge Bx)\\)", true],
                ["\\(\\exists x (Ax \\to Nx)\\)", false],
                ["\\(\\forall x (Nx \\vee \\neg Nx)\\)", true],
                ["\\(\\exists x Bx \\to \\forall x Ax\\)", true],
                ["\\(Rbc\\)", true],
                ["\\(Rcb \\to Rcc\\)", true],
                ["\\((Rcc \\vee Rcb)\\)", false],
                ["\\( \\exists x \\exists y Rxy\\)", true],
                ["\\( \\exists  x Rxx \\)", false],
                ["\\( \\forall x \\forall y (Rxy \\vee Ryx)\\)", false],
                ["\\(\\forall x \\forall y \\forall z [(Rxz \\wedge Ryz) \\to Rxy] \\)", false]

            ]
        },
        "reading_3": {
            "section": "2",
            "title": "Reading Ex. 3: Using Models to Show Logical Properties",
            "type": "check",
            "id": "reading_3",
            "questions": [
                ["Contingent? \\(\\exists x Txh \\)", true],
                ["Contingent? \\(Pm \\wedge \\neg \\forall x Px\\)", true],
                ["Contingent? \\(\\forall z Jz \\leftrightarrow \\exists y Jy\\)", true],
                ["Logically Equivalent? \\(\\exists x Px \\to Qc, \\exists x (Px \\to Qc)\\)", false],
                ["Logically Equivalent? \\(\\forall x (Px \\to \\neg Qx), \\exists x (Px \\wedge \\neg Qx)\\)", false],
                ["Logically Equivalent? \\(\\forall x (Px \\to  Qx), \\exists x (Px \\wedge Qx)\\)", false],
                ["Valid? \\(\\forall x (Ax \\to Bx) \\vDash \\exists x Bx\\)", false],
                ["Invalid? \\(\\exists x (Px \\to  Qx) \\vDash \\exists x Px\\)", true],
                ["Valid? \\(\\{\\exists x (Ex \\wedge  Fx) , \\exists x Fx \\to \\exists x Gx\\} \\vDash \\exists x (Ex \\wedge Gx)\\)", false]

            ]
        },
        "concepts": {
            "section": "concepts",
            "title": "Concepts Matching",
            "terms": [
                ["reference", "An aspect of meaning that deals with the way bits of language pick out or identify objects in the real world."],
                ["referent", "The unique object picked out by a term in QL."],
                ["extension", "The set of objects in the UD that a predicate applies to."],
                ["empty set", "A set with no members in it"],
                ["model", "An interpretation consists of a set that is the universe of discourse, individual members of that set that are the referents of the singular terms in the sentences or arguments, and subsets of the universe of discourse which are the extensions of the predicates used in the sentences or arguments."],
                ["ordered pair", "a set with two members, except that the order matters."],
                ["semantic tautology", "A QL sentence that is true in every model."],
                ["semantic contradiction", "A QL sentence that is false in every model."],
                ["semantic contingency", "A QL sentence that is true in some model and is false in some model."],
                ["semantic consistency", "Given a set of sentences, there is at least one model in which all of the sentences are true."],
                ["semantic inconsistency", "Given a set of sentences, there is no model in which all of the sentences are true."],
                ["semantic validity", "Given an argument, there is no model in which the premises are true, but conclusion false."]
            ]
        },
        "quiz": {
            "section": "quiz",
            "title": "Quiz: Models I"
        },
        "testsample": {
            "section": "testSample",
            "title": "Test: Sample"
        }
    }

}
