extends layout
block extrahead
	link(href="https://fonts.googleapis.com/css?family=Abril+Fatface|Titillium+Web:400" rel="stylesheet")
	script(type="text/x-mathjax-config").
		MathJax.Hub.Config({
		tex2jax: {
			inlineMath: [ ['$','$'], ['\\(','\\)'] ]
		}}
		);
	script(type="text/javascript"  src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_HTMLorMML")



block content
	- var plugin
			main.container.p-a-3
				case sectionNum
					when "sectionconcepts"
						.jumbotron.m-y-3
							h2.display-3.text-xs-center.m-t-3#conceptshead(value = moduleNum) Quiz: Concepts
							p.lead.text-xs-center Instruction: Drag the matching concept into the box containing the given definition. Complete this quiz by matching all concepts. You will have to resrart for any incorrect answer.
						.modal.fade.result
							.modal-dialog.modal-dialog
								.modal-content
									.modal-header
										h4.modal-title Result
									.modal-body
									.modal-footer
										a.btn.btn-secondary(role ="button")#restart Restart
						.card-group
							.card.text-xs-center
								for term in content.ex.concepts.terms
									.draggable.drag-drop.m-a-1.lead.def #{term[0]}
							.card#r.dropzone.text-xs-center
								h4#ans
					when "sectionquiz"
						case moduleNum
							when "8"
							when "6"
								.container.m-t-3.text-xs-center
									.jumbotron.m-y-3
										h2.display-3.text-xs-center.m-t-3#conceptshead(value = moduleNum) Quiz #{moduleNum}: Models
										p.lead.text-xs-center Instruction: Provide the correct truth values for propositions below - click the corresponding box to choose between T and F. You will have to restart for after making a number of mistakes. Get a score of 15 to pass.
										p.display-4#score
										p#description
										p#secondchance
									button.btn.btn-primary.btn-block.m-y-2 Submit
									.table-responsive
										table.table.table-bordered.table-inverse#table
											thead
												- var s_arr = [0,1,2,3]
												- if (mouduleNum == "8") s_arr.push(4)
												- var ext_arr = [0]
												tr
													th.h2.text-xs-center UD:
													th(id = "ud0" colspan = ext_arr.length).h4.text-xs-center model. Domain of Discourse: #{i}
												tr
													td.h2.text-xs-center Extension(s):
													each i in ext_arr
														td(id = "ext0").lead.text-xs-center  exten.
												if moduleNum == "8"
													tr
														td.h2.text-xs-center Referent(s):
														each i in ext_arr
															td(id = "ref0").lead.text-xs-center  ref. #{i}
											tbody
												each i in s_arr
													tr
														th(id = "statement"+i scope = "row").lead.text-xs-center  QL#{i}
														each j in  ext_arr
															- var ij = i+"-"+j
															td(id = ij).lead.tbutt.text-xs-center.display-4 ?

					default
						.lessonSectionTitle
							h1 #{moduleNum}.#{sectionNum}
							hr
							h1 #{content[sectionNum]["1"].sectionname}
						for section in content[sectionNum]
							h2.lessonSubTitle.text-xs-center(id = section.title) #{section.title}
							//- - console.log(section)
							for x in section.content
								if x.type == "p"
									if x.center
										for pa in x.substance
											p.h4.text-xs-center.m-y-2 #{pa}
									else
										for pa in x.substance
											p.text-justify #{pa}
								if x.type == "list"
									ul.list-group
										for y in x.substance
											li.list-group-item #{y}
								if x.type == "link"
									p.lead.text-justify.m-y-2 #{x.description}
									a.btn.btn-secondary.btn.btn-block.lead.m-a-3(href = x.url role ="button") #{x.title} &rArr;
								if x.type == "listHead"
									ul.list-group
										for y in x.substance
											li.list-group-item.lead #{y[0]}
												small.text-muted.m-x-1 #{y[1]}
								if x.type == "ex"
									- y = content.ex[x.id]
									if y.type == "check"
										.container-fluid
											.row
												- for (var i = 0;i<y.questions.length;i++)
													.col-md-12.col-lg-6
														.form-check
														label.form-check-label
															input.form-check-input(type="checkbox" id = y.id + "-"+i value = i)
															p #{y.questions[i][0]}
											button(id = "butt" + y.id type="button" value = moduleNum + "-"+ y.id + "-" + y.type).btn-primary.btn.btn-block.readingbutt Submit Answers
									if y.type == "dragMatch"
										- plugin = "dragMatch"
										#dragMatch(value = x.id)
											.card#r.dropzone.text-xs-center
												h4#ans
											.card.text-xs-center
												for pair in content.ex[x.id].pairs
													.draggable.drag-drop.m-a-1.lead.def(value = content.ex[x.id].pairs.indexOf(pair)) #{pair[0]}
										.modal.fade.result
											.modal-dialog.modal-dialog
												.modal-content
													.modal-header
														h4.modal-title Result
													.modal-body
													.modal-footer
														a.btn.btn-secondary(role ="button")#restart Restart
									if y.type == "proofFill"
										- plugin = "proofFill"
										button(id = "proofbutt" + y.id type="button" value = moduleNum + "-"+ y.id + "-" + y.type).btn-primary.btn.btn-block Submit Answers
										#proofFill(value = x.id).container.m-x-3.p-y-3
								if x.type == 'tooltip'
									include tooltip



			.right.col-lg-2.hidden-lg-down



block extrafooter

	if plugin == "dragMatch"
		script(src='../javascripts/dragmatch.js')
	if plugin == "proofFill"
		script(src='../javascripts/proofFill.js')
		link(rel="stylesheet", type="text/css", href="../css/proof.css")
	if sectionNum == "sectionconcepts"
		script(src='../javascripts/lessonconcepts.js')
	if sectionNum == "sectionquiz"
		case moduleNum
			when "6"
				script(src='../javascripts/modelquiz.js')
			when "8"
				script(src='../javascripts/modelquiz_id.js')
	else
		script(src='../javascripts/lessonreading.js')
	link(rel="stylesheet", type="text/css", href="../css/lesson.css")
